
import os
import sys
from django.core.management import call_command
from django.db import connection


def run_migrations():
    try:
        print("üöÄ Starting database initialization...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        try:
            with connection.cursor() as cursor:
                cursor.execute("SELECT 1 FROM main_car LIMIT 1")
            print("‚úÖ Database already initialized")
            return
        except Exception as e:
            print(f"‚ö†Ô∏è Database not ready: {str(e)}")

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        print("üîÑ Applying migrations...")
        call_command("migrate")

        # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("‚ú® Creating initial data...")
        from main.models import Car

        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å
        car1, created1 = Car.objects.get_or_create(name="KUZANAGI CT-3X")
        if created1:
            print(f"‚úÖ Car 1 created successfully: {car1.name}")
        else:
            print(f"‚ÑπÔ∏è Car 1 already exists: {car1.name}")

        # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å
        car2, created2 = Car.objects.get_or_create(name="QUADRA TURBO-R V-TECH")
        if created2:
            print(f"‚úÖ Car 2 created successfully: {car2.name}")
        else:
            print(f"‚ÑπÔ∏è Car 2 already exists: {car2.name}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥
        car_count = Car.objects.count()
        print(f"üéâ Database initialization complete! Total cars: {car_count}")

    except Exception as e:
        print(f"üî• Initialization failed: {str(e)}")
        import traceback
        traceback.print_exc()