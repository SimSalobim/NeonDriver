import os
import sys
import time
import django
from django.core.management import call_command
from django.db import connection
from django.db.utils import OperationalError

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'NeonDrive.settings')

# startup.py
import os
import django
from django.core.management import call_command


def run_migrations():
    try:
        print("=== STARTING INITIALIZATION ===")

        # 1. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        print("Applying migrations...")
        call_command("migrate")

        # 2. –°–æ–∑–¥–∞–µ–º –º–∞—à–∏–Ω—ã
        print("Creating cars...")
        from main.models import Car
        Car.objects.get_or_create(name="KUZANAGI CT-3X")
        Car.objects.get_or_create(name="QUADRA TURBO-R V-TECH")
        print("Cars created successfully")

        print("=== INITIALIZATION COMPLETE ===")
    except Exception as e:
        print(f"!!! ERROR: {e}")
        import traceback
        traceback.print_exc()

        if wait_for_db():
            run_initialization()
        else:
            sys.exit(1)

def wait_for_db():
    """–û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    max_retries = 10
    retry_delay = 2  # —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏

    for i in range(max_retries):
        try:
            connection.ensure_connection()
            print("‚úÖ Database connection established")
            return True
        except OperationalError:
            print(f"‚ö†Ô∏è Database not ready, retrying... ({i + 1}/{max_retries})")
            time.sleep(retry_delay)
    print("‚ùå Max retries reached. Database still not available.")
    return False


def run_initialization():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏."""
    try:
        print("üöÄ Starting database initialization...")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        with connection.cursor() as cursor:
            cursor.execute("""
                SELECT EXISTS (
                    SELECT 1 FROM information_schema.tables 
                    WHERE table_name = 'main_car'
                )
            """)
            table_exists = cursor.fetchone()[0]

        if table_exists:
            print("‚úÖ Database already initialized")
            return

        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
        print("üîÑ Applying migrations...")
        call_command("migrate", interactive=False)

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("‚ú® Creating initial data...")
        from main.models import Car
        Car.objects.get_or_create(name="KUZANAGI CT-3X")
        Car.objects.get_or_create(name="QUADRA TURBO-R V-TECH")

        print("üéâ Database initialization complete!")
    except Exception as e:
        print(f"üî• Initialization error: {str(e)}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django
    django.setup()

    # –û–∂–∏–¥–∞–Ω–∏–µ –ë–î –∏ –∑–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    if wait_for_db():
        run_initialization()
    else:
        sys.exit(1)