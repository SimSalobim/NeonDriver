import os
import sys
import time
import django
from django.core.management import call_command
from django.db import connection
from django.db.utils import OperationalError

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'NeonDrive.settings')
django.setup()  # –í–∞–∂–Ω–æ: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django –¥–æ —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏


def wait_for_db():
    """–û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º."""
    max_retries = 15
    retry_delay = 3

    print(f"üïí –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    print(f"üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î: {connection.settings_dict}")

    for i in range(max_retries):
        try:
            connection.ensure_connection()
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            return True
        except OperationalError as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (–ø–æ–ø—ã—Ç–∫–∞ {i + 1}/{max_retries}): {str(e)}")
            time.sleep(retry_delay)
    print("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    return False


def run_initialization():
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

        # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è main
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
        call_command("makemigrations", "main", interactive=False)

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
        call_command("migrate", interactive=False)

        # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("‚ú® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        from main.models import Car

        car1, created1 = Car.objects.get_or_create(name="KUZANAGI CT-3X")
        car2, created2 = Car.objects.get_or_create(name="QUADRA TURBO-R V-TECH")

        print(f"üöó –ú–∞—à–∏–Ω–∞ 1: {'—Å–æ–∑–¥–∞–Ω–∞' if created1 else '—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'} - {car1.name}")
        print(f"üöó –ú–∞—à–∏–Ω–∞ 2: {'—Å–æ–∑–¥–∞–Ω–∞' if created2 else '—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'} - {car2.name}")

        print("üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
    except Exception as e:
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    if wait_for_db():
        if run_initialization():
            sys.exit(0)  # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        else:
            sys.exit(1)  # –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    else:
        sys.exit(2)  # –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î